//CONTIENE CODIGO CON UN RELE ACTIVADO O DESACTIVADO A TRAVES DE LA APP DE ALEXA


#ifdef ARDUINO_ARCH_ESP32
#include <WiFi.h>
#else
#include <ESP8266WiFi.h>
#endif
#include <Espalexa.h>
#include "BluetoothSerial.h"
#include "string.h"

const int botonPin = 15; 
const int relePin = 13; 

bool estadoBoton;
bool estadoAnterior = LOW;
bool releEstado = LOW;
bool toggle = false;


BluetoothSerial SerialBT;
char buffer[20];
static int count = 0;


Espalexa espalexa;


const char* ssid = "CX";
const char* password = "canitosantifer";
boolean wifiConnected = false;


boolean connectWifi();
void firstLightChanged(uint8_t brightness);

void setup() {
  Serial.begin(115200);

  
  wifiConnected = connectWifi();

  if (wifiConnected) {
    
    espalexa.addDevice("Light 1", firstLightChanged);  
    espalexa.begin();
  } else {
    while (1) {
      Serial.println("Cannot connect to WiFi. Please check data and reset the ESP.");
      delay(2500);
    }
  }

  
  pinMode(relePin, OUTPUT);
  pinMode(botonPin, INPUT);
  SerialBT.begin("ESPSANT");
  Serial.println("READY TO PAIR");
  digitalWrite(relePin, releEstado);
}

void loop() {

  estadoBoton = digitalRead(botonPin);
  if (estadoBoton != estadoAnterior) {
    if (estadoAnterior == LOW) {
      toggle = !toggle;
      digitalWrite(relePin, toggle);
      Serial.print("BUTTON: ");
      SerialBT.println("TOGGLE BOTON");
      Serial.println("Toggle " + String(toggle));
    }
  }

  digitalWrite(relePin, toggle);
  estadoAnterior = estadoBoton;
  delay(100);

  // Control mediante Bluetooth
  while (SerialBT.available()) {
    buffer[count] = SerialBT.read();
    count++;
  }
  if (count > 0) {
    Serial.print(buffer);
    if (strncmp(buffer, "toggle", 6) == 0) {
      toggle = !toggle;
      digitalWrite(relePin, toggle);
      Serial.print("Bluetooth: ");
      SerialBT.println("TOGGLE BT");
      Serial.println("Toggle " + String(toggle));
    }
  }
  count = 0;
  memset(buffer, 0, 20);

  
  pinMode(relePin, OUTPUT);
  espalexa.loop();
  delay(1);
}


void firstLightChanged(uint8_t brightness) {
  Serial.print("Device 1 changed to ");
  if (brightness) {
    Serial.print("ON, brightness ");
    Serial.println(brightness);
    if (estadoAnterior == LOW) {
      toggle = !toggle;
      digitalWrite(relePin, toggle);
    }
  }
}


boolean connectWifi() {
  boolean state = true;
  int i = 0;

  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  Serial.println("");
  Serial.println("Connecting to WiFi");


  Serial.print("Connecting...");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
    if (i > 20) {
      state = false;
      break;
    }
    i++;
  }
  Serial.println("");
  if (state) {
    Serial.print("Connected to ");
    Serial.println(ssid);
    Serial.print("IP address: ");
    Serial.println(WiFi.localIP());
  } else {
    Serial.println("Connection failed.");
  }
  return state;
}
